<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ke5GBmTJZmVztDzHr+kyZMjEf//Z
</value>
  </data>
</root>